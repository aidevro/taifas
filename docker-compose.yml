services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api:
        condition: service_healthy
      streaming:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    environment:
      - MONGO_URI=mongodb://mongodb:27017/taifas
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_SERVICE_URL=http://auth:3001
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - MONGO_URI=mongodb://mongodb:27017/taifas
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  streaming:
    build:
      context: ./streaming
      dockerfile: Dockerfile
    container_name: streaming
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: web
    volumes:
      - ./web:/app
    command: ["npx", "tailwindcss", "-i", "./src/index.css", "-o", "./public/output.css", "--watch"]
    networks:
      - taifas-net

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=taifas
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  redis:
    image: redis:6.2
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    ports:
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - taifas-net

networks:
  taifas-net:
    driver: bridge
    name: taifas-net

volumes:
  mongodb-data:
  minio-data:
